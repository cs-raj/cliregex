name: Release
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build and upload
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version: '18.x'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run prepack
      - name: Upload dist
        uses: actions/upload-artifact@v3.1.2
        with:
          name: lib
          path: lib

  release:
    name: Download dist and release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version: '18.x'
      - name: Install dependencies
        run: npm install
      - name: Download dist
        uses: actions/download-artifact@v3
        with:
          name: lib
          path: lib
      - name: Display dirs
        run: ls -R
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      - name: github-release
        id: github-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:  gh release create v${{ steps.package-version.outputs.current-version }} --title "Release ${{ steps.package-version.outputs.current-version }}" --generate-notes
      - name: Create Release
        uses: actions/create-release@v1.1.4
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.update_tag.outputs.tagname }}
          release_name: Release ${{ steps.update_tag.outputs.tagname }}
      - name: idk
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing its ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./cliregex-${{ steps.package-version.outputs.current-version }}.tgz
          asset_name: cliregex-${{ steps.package-version.outputs.current-version }}.tgz
          asset_content_type: application/tgz